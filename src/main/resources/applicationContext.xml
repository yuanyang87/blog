<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="blog.geek">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--引入JDBC文件-->
    <util:properties id="jdbc" location="classpath:jdbc.properties"/>

    <!--配置数据源-->
    <bean id="dataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--连接URL-->
        <property name="jdbcUrl" value="#{jdbc.url}"/>
        <!--数据库驱动-->
        <property name="driverClass" value="#{jdbc.driver}"/>
        <!--用户-->
        <property name="user" value="#{jdbc.user}"/>
        <!--密码-->
        <property name="password" value="#{jdbc.password}"/>
        <!--初始创建的连接数-->
        <property name="initialPoolSize" value="#{jdbc.initial}"/>
        <!--最少连接数-->
        <property name="minPoolSize" value="#{jdbc.min}"/>
        <!--最大连接数-->
        <property name="maxPoolSize" value="#{jdbc.max}"/>
        <!-- 当获取连接失败重试次数 -->
        <property name="acquireIncrement" value="#{jdbc.increment}"/>
    </bean>

    <!--配置mybatis sqlSessionFactoryBean工厂-->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--Mapper 文件位置-->
        <property name="mapperLocations"
                  value="classpath:mapper/*.xml"/>
        <!--Mybatis 配置文件位置-->
        <property name="configLocation"
                  value="classpath:mybatis-config.xml"/>
        <!--自动配置别名-->
        <property name="typeAliasesPackage" value="blog.geek.entity,blog.geek.dto"/>
    </bean>

    <!-- 自动扫描DAO包,动态实现DAO接口,注入到Spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--包-->
        <property name="basePackage" value="blog.geek.dao"/>
        <!--sqlSessionFactory工厂-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--文件上传-->
    <bean id="filterMultipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="209715200"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="resolveLazily" value="true"/>
    </bean>

    <!--事务-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--指向配置的数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--事务通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="select*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!--配置aop-->
    <aop:config>
        <!--配置切点-->
        <aop:pointcut id="pointCut" expression="execution(* blog.geek.*.service.*.*(..))"/>
        <!--配置切面-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut"/>
    </aop:config>

</beans>